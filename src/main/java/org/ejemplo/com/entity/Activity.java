package org.ejemplo.com.entity;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.ejemplo.com.entity.property.ActivityProperty;

@Entity(name=ActivityProperty.TABLE)
public class Activity implements Serializable {

	/**
	 * A {@code Long} Serial Autogenerated value: {@value #serialVersionUID}.
	 */
	private static final long serialVersionUID = 6242551510336025816L;

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name=ActivityProperty.ID, nullable=false)
	private Integer id;
		
	@Column(name=ActivityProperty.NAME, nullable=false)
	private String name;
	
	@Column(name=ActivityProperty.DESCRIPTION, nullable=false)
	private String description;
	
	@Column(name=ActivityProperty.PLACE, nullable=false)
	private String place;
	
	@Column(name=ActivityProperty.STATE, nullable=false)
	private Boolean state;
	
	@Column(name=ActivityProperty.BEGIN_DATE, nullable=false)
	@Temporal(TemporalType.TIMESTAMP)
	private Date beginDate;
	
	@Column(name=ActivityProperty.END_DATE, nullable=false)
	@Temporal(TemporalType.TIMESTAMP)
	private Date endDate;
	
	@Column(name=ActivityProperty.UPDATE_DATE, nullable=false)
	@Temporal(TemporalType.TIMESTAMP)
	private Date updateDate;
	
	@Column(name=ActivityProperty.ENROLL_DATE, nullable=false)
	@Temporal(TemporalType.TIMESTAMP)
	private Date enrollDate;
	
	@ManyToOne
	@JoinColumn(name=ActivityProperty.RELATION_USER)
	private User user;
	
	public Activity() {
		super();
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getPlace() {
		return place;
	}

	public void setPlace(String place) {
		this.place = place;
	}

	public Boolean getState() {
		return state;
	}

	public void setState(Boolean state) {
		this.state = state;
	}

	public Date getBeginDate() {
		return beginDate;
	}

	public void setBeginDate(Date beginDate) {
		this.beginDate = beginDate;
	}

	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	public Date getUpdateDate() {
		return updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	public Date getEnrollDate() {
		return enrollDate;
	}

	public void setEnrollDate(Date enrollDate) {
		this.enrollDate = enrollDate;
	}

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Activity)) {
			return false;
		}
		Activity other = (Activity) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Activity [id=").append(id).append(", name=").append(name).append(", description=")
				.append(description).append(", place=").append(place).append(", state=").append(state)
				.append(", beginDate=").append(beginDate).append(", endDate=").append(endDate).append(", updateDate=")
				.append(updateDate).append(", enrollDate=").append(enrollDate).append(", user=").append(user.getId())
				.append("]");
		return builder.toString();
	}
}
